/** DNA variables */

:root {
  /* global (static) */
  --spectrum-colorwheel-focus-ring-size: var(--spectrum-global-dimension-static-size-25);
  --spectrum-colorwheel-stroke-width: var(--spectrum-global-dimension-static-size-10);
  --spectrum-colorwheel-stroke-width-focused: var(--spectrum-global-dimension-static-size-25);
  --spectrum-colorwheel-disabled-opacity: 0.3;
  --spectrum-colorwheel-border-radius: 100%;
  --spectrum-colorwheel-handle-animation-duration: var(--spectrum-global-animation-duration-100);
  --spectrum-colorwheel-handle-animation-easing: ease-in-out;

  /* index.css (scale dependent) */
  --spectrum-colorwheel-margin: var(--spectrum-global-dimension-size-100);
  --spectrum-colorwheel-width: calc(var(--spectrum-global-dimension-size-125) * 16);
  --spectrum-colorwheel-height: var(--spectrum-colorwheel-width);

  --spectrum-colorwheel-handle-size: var(--spectrum-global-dimension-size-200);
  --spectrum-colorhweel-handle-border-width: var(--spectrum-global-dimension-size-25);
  --spectrum-colorwheel-handle-hitarea-size: var(--spectrum-global-dimension-size-300);
  --spectrum-colorwheel-handle-hitarea-radius: 100%;

  /* skin.css (colorstop dependent) */
  --spectrum-colorwheel-focus-ring-color: var(--spectrum-alias-focus-color);

  --spectrum-colorwheel-background-color: var(--spectrum-global-color-blue-400);
  --spectrum-colorwheel-background-color-hover: var(--spectrum-global-color-blue-500);
  --spectrum-colorwheel-background-color-disabled: var(--spectrum-global-color-gray-400);

  --spectrum-colorwheel-stroke-color: rgba(44, 44, 44, 0.1);
  --spectrum-colorwheel-handle-color: var(--spectrum-global-color-gray-50);
}


/** index.css (scale dependent) */

%spectrum-ColorControl-hiddenField {
  opacity: 0.0001;
  position: absolute;
  top: 0; right: 0; left: 0; bottom: 0;
  z-index: 0;
  margin: 0;
  pointer-events: none;
}

.spectrum-ColorWheel {
  position: relative;
  display: block;
  width: var(--spectrum-colorwheel-width);
  height: var(--spectrum-colorwheel-height);
  margin: var(--spectrum-colorwheel-margin);

  border-radius: var(--spectrum-colorwheel-border-radius);

  cursor: default;

  &.is-focused {
    z-index: 1;

    .spectrum-ColorWheel-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
  }


  &.is-dragging {
    /* Be on top when dragging so loupe can overlap */
    z-index: 1;
  }
}

.spectrum-ColorWheel-slider {
  @extend %spectrum-ColorControl-hiddenField;
}

/*
.spectrum-ColorWheel {
  &.is-dragging {
    cursor: grabbing;
    .spectrum-ColorWheel-handle {
      cursor: grabbing;
    }
  }
}
*/
%spectrum-ColorControl-handle {
  position: absolute;
  box-sizing: border-box;
  width: var(--spectrum-colorwheel-handle-size);
  height: var(--spectrum-colorwheel-handle-size);
  border-width: var(--spectrum-colorhweel-handle-border-width);
  border-style: solid;

  margin-left: calc(-1 * calc(var(--spectrum-colorwheel-handle-size) / 2));
  margin-top: calc(-1 * calc(var(--spectrum-colorwheel-handle-size) / 2));

  transition:
    width var(--spectrum-colorwheel-handle-animation-duration) var(--spectrum-colorwheel-handle-animation-easing),
    height var(--spectrum-colorwheel-handle-animation-duration) var(--spectrum-colorwheel-handle-animation-easing),
    border-width var(--spectrum-colorwheel-handle-animation-duration) var(--spectrum-colorwheel-handle-animation-easing),
    margin-left var(--spectrum-colorwheel-handle-animation-duration) var(--spectrum-colorwheel-handle-animation-easing),
    margin-top var(--spectrum-colorwheel-handle-animation-duration) var(--spectrum-colorwheel-handle-animation-easing);

  /*
  cursor: move;
  cursor: grab;
  */

  &,
  &:after {
    border-radius: 100%;
  }

  &:after {
    content: '';
    left: calc(50% - calc(var(--spectrum-colorwheel-handle-hitarea-size) / 2));
    top: calc(50% - calc(var(--spectrum-colorwheel-handle-hitarea-size) / 2));
    position: absolute;
    display: block;
    width: var(--spectrum-colorwheel-handle-hitarea-size);
    height: var(--spectrum-colorwheel-handle-hitarea-size);
  }
}

.spectrum-ColorWheel-handle {
  @extend %spectrum-ColorControl-handle;
  left: 50%;
  top: 50%;
}
.spectrum-ColorWheel-handleContainer {
  position: absolute;
  left: 50%;
  top: 50%;
}


/** skin.css (colorstop dependent) */
.spectrum-ColorWheel {
  &.is-disabled {
    opacity: var(--spectrum-colorwheel-disabled-opacity);
  }
}

.spectrum-ColorWheel-outerCircle,
.spectrum-ColorWheel-innerCircle {
  fill: transparent;

  stroke-width: var(--spectrum-colorwheel-stroke-width);
  stroke: var(--spectrum-colorwheel-stroke-color);
}
.spectrum-ColorWheel-outerCircle {
  stroke-width: var(--spectrum-colorwheel-stroke-width);
}

:root {
  /** global */
  --spectrum-colorarea-disabled-opacity: 0.3;

  /** dimensional */
  --spectrum-colorarea-width: calc(var(--spectrum-global-dimension-size-125) * 16);
  --spectrum-colorarea-height: var(--spectrum-colorwheel-width);
  --spectrum-colorarea-margin: var(--spectrum-global-dimension-size-100);
  --spectrum-colorarea-border-radius: var(--spectrum-alias-border-radius-regular);
  --spectrum-colorarea-small-width: var(--spectrum-global-dimension-size-900);
  --spectrum-colorarea-small-height: var(--spectrum-colorarea-small-width);

  /** colorstop */
}

.spectrum-ColorArea {
  position: relative;
  display: block;
  width: var(--spectrum-colorarea-width);
  height: var(--spectrum-colorarea-height);
  margin: var(--spectrum-colorarea-margin);

  cursor: default;

  &.is-focused {
    z-index: 1;

    .spectrum-ColorArea-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
  }
}

.spectrum-ColorArea[size="small"], /* Work around web components getting value before size */
.spectrum-ColorArea--small {
  width: var(--spectrum-colorarea-small-width);
  height: var(--spectrum-colorarea-small-height);
}

.spectrum-ColorArea-handle {
  left: 0;
  top: 0;
}

.spectrum-ColorArea-gradient {
  width: 100%;
  height: 100%;
  border-radius: var(--spectrum-colorarea-border-radius);

  box-shadow: 0 0 0 var(--spectrum-colorwheel-stroke-width) var(--spectrum-colorwheel-stroke-color);
}

/** skin.css */
.spectrum-ColorArea {
  &.is-disabled {
    opacity: var(--spectrum-colorarea-disabled-opacity);
  }
}

.spectrum-ColorArea-slider {
  @extend %spectrum-ColorControl-hiddenField;
}



:root {
  /** global */
  --spectrum-colorslider-disabled-opacity: 0.3;

  /** dimensional */
  --spectrum-colorslider-width: calc(var(--spectrum-global-dimension-size-125) * 16);
  --spectrum-colorslider-height: var(--spectrum-global-dimension-size-300);
  --spectrum-colorslider-margin: var(--spectrum-global-dimension-size-100);
  --spectrum-colorslider-border-radius: var(--spectrum-alias-border-radius-regular);

  --spectrum-colorslider-handle-hitarea-border-radius: 0%;
  --spectrum-colorslider-handle-hitarea-width: var(--spectrum-global-dimension-size-300);
  --spectrum-colorslider-handle-hitarea-height: var(--spectrum-global-dimension-size-300);

  /** colorstop */
}

.spectrum-ColorSlider {
  position: relative;
  display: block;
  width: var(--spectrum-colorslider-width);
  height: var(--spectrum-colorslider-height);
  margin: var(--spectrum-colorslider-margin);

  /* Otherwise we randomly drag a file icon */
  user-select: none;

  cursor: default;

  &.is-focused {
    z-index: 1;

    .spectrum-ColorSlider-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
  }
}

.spectrum-ColorSlider-handle {
  left: 0;
  top: 50%;

  &:after {
    border-radius: var(--spectrum-colorslider-handle-hitarea-border-radius);
    width: var(--spectrum-colorslider-handle-hitarea-width);
    height: var(--spectrum-colorslider-handle-hitarea-height);
  }
}

.spectrum-ColorSlider-gradient {
  width: 100%;
  height: 100%;
  border-radius: var(--spectrum-colorslider-border-radius);

  box-shadow: 0 0 0 var(--spectrum-colorwheel-stroke-width) var(--spectrum-colorwheel-stroke-color);
}

/** skin.css */
.spectrum-ColorSlider {
  &.is-disabled {
    opacity: var(--spectrum-colorslider-disabled-opacity);
  }
}

.spectrum-ColorSlider-slider {
  @extend %spectrum-ColorControl-hiddenField;
}


:root {
  /** global */

  /** dimensional */

  /** colorstop */
}

.spectrum-ColorPicker {
  display: inline-block;
  position: relative;
  .spectrum-ColorArea {
    position: absolute;
    margin: 0;
    left: calc(50% - calc(var(--spectrum-colorarea-small-width) / 2));
    top: calc(50% - calc(var(--spectrum-colorarea-small-height) / 2));
  }
}


%spectrum-ColorControl-handle--focused {
  /* Bigger handle when focused */
  width: calc(var(--spectrum-colorwheel-handle-size) * 2);
  height: calc(var(--spectrum-colorwheel-handle-size) * 2);

  margin-left: calc(-1 * var(--spectrum-colorwheel-handle-size));
  margin-top: calc(-1 * var(--spectrum-colorwheel-handle-size));
}

.spectrum-ColorHandle {
  @extend %spectrum-ColorControl-handle;

  display: block;
  position: absolute;

  &.is-active {
    .spectrum-ColorHandle-loupe {
      transform: scale(1, 1);
      opacity: 1;
    }
  }
}

.spectrum-ColorHandle-loupeOuter {
  stroke-width: 1px;
}

.spectrum-ColorHandle-loupe {
  position: absolute;
  transform: scale(0, 0);
  opacity: 0;
  transform-origin: bottom center;
  bottom: calc(50% + 12px);
  left: calc(50% - calc(50px / 2));
  transition: transform 100ms ease-in-out,
              opacity 125ms ease-in-out;
}

/** skin.css */
.spectrum-ColorHandle {
  border-color: var(--spectrum-colorwheel-handle-color);
  box-shadow: 0 0 0 var(--spectrum-colorwheel-stroke-width) var(--spectrum-colorwheel-stroke-color), inset 0 0 0 var(--spectrum-colorwheel-stroke-width) var(--spectrum-colorwheel-stroke-color);
}

.spectrum-ColorHandle-loupeOuter {
  fill: white;
  stroke: rgba(44, 44, 44, 0.1);
}
