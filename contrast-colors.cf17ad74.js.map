{"version":3,"sources":["contrast-colors.js"],"names":["createScale","swatches","colorKeys","colorspace","shift","fullScale","Domains","i","length","push","d3","hsluv","v","sort","a","b","domains","concat","sqrtDomains","scalePow","exponent","domain","range","map","d","cArray","c","L","l","U","u","V","Array","sortedColor","index","c1","c2","data","inverseSortedColor","ColorsArray","jab","scale","scaleLinear","interpolate","interpolateJab","hcl","NaN","interpolateHcl","lab","interpolateLab","hsl","interpolateHsl","interpolateHsluv","rgb","interpolateRgb","hsv","interpolateHsv","Colors","colors","filter","el","colorsHex","formatHex","generateContrastColors","base","ratios","Contrasts","rgbArray","r","g","baseRgbArray","ca","contrast","toFixed","Number","contrasts","baseLum","luminance","newColors","binarySearch","hex","Math","pow","color","colorLum","cr1","cr2","list","value","start","stop","middle","floor","minContrast","min","maxContrast","max","closest","reduce","prev","curr"],"mappings":"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","file":"contrast-colors.cf17ad74.js","sourceRoot":"../src","sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nfunction createScale({swatches = 8, colorKeys = ['#CCFFA9', '#FEFEC5', '#5F0198'], colorspace = 'LAB', shift = 1, fullScale = true} = {}) {\n  var Domains = [];\n\n  for(i=0; i < colorKeys.length; i++){\n    Domains.push(swatches - swatches * (d3.hsluv(colorKeys[i]).v / 100))\n  }\n  Domains.sort(function(a, b){return a-b});\n\n  var domains = [];\n  domains = domains.concat(0, Domains, swatches);\n\n  // Test logarithmic domain (for non-contrast-based scales)\n  var sqrtDomains = d3.scalePow()\n    .exponent(shift)\n    .domain([1, swatches])\n    .range([1, swatches]);\n\n  sqrtDomains = domains.map(function(d) {\n    if(sqrtDomains(d) < 0) {\n      return 0;\n    } else {\n      return sqrtDomains(d);\n    }\n  })\n\n  // Transform square root in order to smooth gradient\n  domains = sqrtDomains;\n\n  function cArray(c) {\n    var L = d3.hsluv(c).l;\n    var U = d3.hsluv(c).u;\n    var V = d3.hsluv(c).v;\n\n    return new Array( L, U, V);\n  }\n  var sortedColor = colorKeys.map(function(c, i) {\n    // Convert to HSLuv and keep track of original indices\n    return {colorKeys: cArray(c), index: i};\n  }).sort(function(c1, c2) {\n    // Sort by lightness\n    return c2.colorKeys[2] - c1.colorKeys[2];\n  }).map(function(data) {\n    // Retrieve original RGB color\n    return colorKeys[data.index];\n  });\n\n  var inverseSortedColor = colorKeys.map(function(c, i) {\n    // Convert to HSLuv and keep track of original indices\n    return {colorKeys: cArray(c), index: i};\n  }).sort(function(c1, c2) {\n    // Sort by lightness\n    return c1.colorKeys[2] - c2.colorKeys[2];\n  }).map(function(data) {\n    // Retrieve original RGB color\n    return colorKeys[data.index];\n  });\n\n  ColorsArray = [];\n\n  if(colorspace == 'CAM02') {\n    if(fullScale == true) {\n      ColorsArray = ColorsArray.concat('#ffffff', sortedColor, '#000000');\n    } else {\n      ColorsArray = ColorsArray.concat(sortedColor);\n    }\n    ColorsArray = ColorsArray.map(function(d) {\n      return d3.jab(d);\n    });\n\n    scale = d3.scaleLinear()\n      .range(ColorsArray)\n      .domain(domains)\n      .interpolate(d3.interpolateJab);\n  }\n  if(colorspace == 'LCH') {\n    ColorsArray = ColorsArray.map(function(d) {\n      return d3.hcl(d);\n    });\n    if(fullScale == true) {\n      ColorsArray = ColorsArray.concat(d3.hcl(NaN, 0, 100), sortedColor, d3.hcl(NaN, 0, 0));\n    } else {\n      ColorsArray = ColorsArray.concat(sortedColor);\n    }\n    scale = d3.scaleLinear()\n      .range(ColorsArray)\n      .domain(domains)\n      .interpolate(d3.interpolateHcl);\n  }\n  if(colorspace == 'LAB') {\n    if(fullScale == true) {\n      ColorsArray = ColorsArray.concat('#ffffff', sortedColor, '#000000');\n    } else {\n      ColorsArray = ColorsArray.concat(sortedColor);\n    }\n    ColorsArray = ColorsArray.map(function(d) {\n      return d3.lab(d);\n    });\n\n    scale = d3.scaleLinear()\n      .range(ColorsArray)\n      .domain(domains)\n      .interpolate(d3.interpolateLab);\n  }\n  if(colorspace == 'HSL') {\n    if(fullScale == true) {\n      ColorsArray = ColorsArray.concat('#ffffff', sortedColor, '#000000');\n    } else {\n      ColorsArray = ColorsArray.concat(sortedColor);\n    }\n    ColorsArray = ColorsArray.map(function(d) {\n      return d3.hsl(d);\n    });\n    scale = d3.scaleLinear()\n      .range(ColorsArray)\n      .domain(domains)\n      .interpolate(d3.interpolateHsl);\n  }\n  if(colorspace == 'HSLuv') {\n    ColorsArray = ColorsArray.map(function(d) {\n      return d3.hsluv(d);\n    });\n    if(fullScale == true) {\n      ColorsArray = ColorsArray.concat(d3.hsluv(NaN, NaN, 100), sortedColor, d3.hsluv(NaN, NaN, 0));\n    } else {\n      ColorsArray = ColorsArray.concat(sortedColor);\n    }\n    scale = d3.scaleLinear()\n      .range(ColorsArray)\n      .domain(domains)\n      .interpolate(d3.interpolateHsluv);\n  }\n  if(colorspace == 'RGB') {\n    if(fullScale == true) {\n      ColorsArray = ColorsArray.concat('#ffffff', sortedColor, '#000000');\n    } else {\n      ColorsArray = ColorsArray.concat(sortedColor);\n    }\n    ColorsArray = ColorsArray.map(function(d) {\n      return d3.rgb(d);\n    });\n    scale = d3.scaleLinear()\n      .range(ColorsArray)\n      .domain(domains)\n      .interpolate(d3.interpolateRgb);\n  }\n  if(colorspace == 'HSV') {\n    if(fullScale == true) {\n      ColorsArray = ColorsArray.concat('#ffffff', sortedColor, '#000000');\n    } else {\n      ColorsArray = ColorsArray.concat(sortedColor);\n    }\n    ColorsArray = ColorsArray.map(function(d) {\n      return d3.hsv(d);\n    });\n    scale = d3.scaleLinear()\n      .range(ColorsArray)\n      .domain(domains)\n      .interpolate(d3.interpolateHsv);\n  }\n\n  var Colors = d3.range(swatches).map(function(d) {\n    return scale(d)\n  });\n\n  colors = Colors.filter(function (el) {\n    return el != null;\n  });\n\n  // Return colors as hex values for interpolators.\n  colorsHex = [];\n  for (i=0; i<colors.length; i++) {\n    colorsHex.push(d3.rgb(colors[i]).formatHex());\n  }\n\n  return {colorKeys: colorKeys, colorspace: colorspace, shift: shift, colors: colors};\n}\n// Test script\n// createScale({swatches: 8, colorKeys: ['#CCFFA9', '#FEFEC5', '#5F0198'], colorspace: 'LAB', shift: 1, fullScale: true});\n\nfunction generateContrastColors({colorKeys, base, ratios, colorspace = 'LAB', shift = 1} = {}) {\n  swatches = 3000;\n\n  createScale({swatches: swatches, colorKeys: colorKeys, colorspace: colorspace, shift: shift});\n\n  var Contrasts = d3.range(swatches).map(function(d) {\n    var rgbArray = [d3.rgb(scale(d)).r, d3.rgb(scale(d)).g, d3.rgb(scale(d)).b];\n    var baseRgbArray = [d3.rgb(base).r, d3.rgb(base).g, d3.rgb(base).b];\n    var ca = contrast(rgbArray, baseRgbArray).toFixed(2);\n\n    return Number(ca);\n  });\n  contrasts = Contrasts.filter(function (el) {\n    return el != null;\n  });\n\n  var baseLum = luminance(d3.rgb(base).r, d3.rgb(base).g, d3.rgb(base).b);\n\n  newColors = [];\n  ratios = ratios.map(Number);\n\n  // Return color matching target ratio, or closest number\n  for(i=0; i < ratios.length; i++){\n    var r = binarySearch(contrasts, ratios[i], baseLum);\n    newColors.push(d3.rgb(colors[r]).hex());\n  }\n\n  return newColors;\n}\n\n// Test scripts:\n// generateContrastColors({colorKeys: ['#2451FF', '#C9FEFE', '#012676'], base: '#f5f5f5', ratios: [3, 4.5], colorspace: 'RGB'});\n// generateContrastColors({colorKeys: [\"#0000ff\"], base: \"#323232\",ratios: [-1.25,4.5], colorspace: \"LCH\"});\n// Error Tests:\n// generateContrastColors({base: '#f5f5f5', ratios: [3, 4.5], colorspace: 'RGB'}) // no colors\n// generateContrastColors({colorKeys: ['#2451FF', '#C9FEFE', '#012676'], base: '#f5f5f5', colorspace: 'RGB'}) // no ratios\n\n\n// TODO: see if there's a luminance package?\n// Separate files in a lib folder as well.\nfunction luminance(r, g, b) {\n  var a = [r, g, b].map(function (v) {\n      v /= 255;\n      return v <= 0.03928\n          ? v / 12.92\n          : Math.pow( (v + 0.055) / 1.055, 2.4 );\n  });\n  return (a[0] * 0.2126) + (a[1] * 0.7152) + (a[2] * 0.0722);\n}\n\n// function percievedLum(r, g, b) {\n//   return (0.299*r + 0.587*g + 0.114*b);\n// }\n\n// Separate files in a lib folder as well.\nfunction contrast(color, base) {\n  var colorLum = luminance(color[0], color[1], color[2]);\n  var baseLum = luminance(base[0], base[1], base[2]);\n\n  var cr1 = (colorLum + 0.05) / (baseLum + 0.05);\n  var cr2 = (baseLum + 0.05) / (colorLum + 0.05);\n\n  if(baseLum < 0.5) {\n    if (cr1 >= 1) { return cr1; }\n    else { return cr2 * -1; } // Return as whole negative number\n  } else {\n    if (cr1 < 1) { return cr2; }\n    else { return cr1 * -1; } // Return as whole negative number\n  }\n}\n// test scripts:\n// contrast([255, 255, 255], [207, 207, 207]); // white is UI color, gray is base. Should return negative whole number\n\n\n// TODO: Find binary search package to use instead of this. -> use its own file\n// Binary search to find index of contrast ratio that is input\n// Modified from https://medium.com/hackernoon/programming-with-js-binary-search-aaf86cef9cb3\nfunction binarySearch(list, value, baseLum) {\n  // initial values for start, middle and end\n  let start = 0\n  let stop = list.length - 1\n  let middle = Math.floor((start + stop) / 2)\n\n  var minContrast = Math.min(...list);\n  var maxContrast = Math.max(...list);\n\n  // While the middle is not what we're looking for and the list does not have a single item\n  while (list[middle] !== value && start < stop) {\n    // Value greater than since array is ordered descending\n    if(baseLum > 0.5) {  // if base is light, ratios ordered ascending\n      if (value < list[middle]) {\n        stop = middle - 1\n      } else {\n        start = middle + 1\n      }\n    } else { // order descending\n      if (value > list[middle]) {\n        stop = middle - 1\n      } else {\n        start = middle + 1\n      }\n    }\n    // recalculate middle on every iteration\n    middle = Math.floor((start + stop) / 2)\n  }\n\n  // If no match, find closest item greater than value\n  closest = list.reduce((prev, curr) => curr > value ? curr : prev);\n\n  // if the current middle item is what we're looking for return it's index, else closest\n  return (list[middle] == !value) ? closest : middle // how it was originally expressed\n}\n\n// TEST\n// args = createScale({swatches: 8, colorKeys: ['#CCFFA9', '#FEFEC5', '#5F0198'], colorspace: 'LAB', shift: 1, fullScale: true});\n// generateContrastColors({args, base: '#ffffff', ratios: [3, 4.5, 7]});\n"]}